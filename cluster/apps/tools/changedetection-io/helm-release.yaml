---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: changedetection-io
  namespace: tools
spec:
  interval: 5m
  chart:
    spec:
      chart: /charts/kah-common/
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: dgtlmoon/changedetection.io
      tag: "0.39"
    nameOverride: changedetection-io
    env:
      BASE_URL: "https://change-detect.${SECRET_DOMAIN}"
      WEBDRIVER_URL: http://localhost:4444/wd/hub
      TZ: "Europe/London"
    service:
      main:
        ports:
          http:
            port: 5000
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          #? traefik-specifics
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          #! oauth2 #!
          traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-forward-auth@kubernetescrd
          #? cert issuer; valid opttions: letsencrypt-stating or letsencrypt-production
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          #? hajimari-specific (optional) - icon ref: https://materialdesignicons.com/
          hajimari.io/enable: "true"
          hajimari.io/icon: "newspaper-variant-outline"
          #? external DNS - if need to be accessed via Internet (using CloudFlare)
          #? https://github.com/kubernetes-sigs/external-dns/blob/master/docs/faq.md
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
        hosts:
          - host: "change-detect.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "change-detect.${SECRET_DOMAIN}"
            #? needed for ingress!
            secretName: "changedetection-tls"
    persistence:
      config:
        enabled: true
        existingClaim: changedetection-io-config-v1
        mountPath: /datastore
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/datastore"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/datastore"]'
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
    additionalContainers:
      chrome-webdriver:
        name: chrome-webdriver
        image: selenium/standalone-chrome-debug:3.141.59
        imagePullPolicy: IfNotPresent
        ports:
          - name: web
            containerPort: 4444
        volumeMounts:
          - name: cache
            mountPath: /dev/shm
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /datastore
        securityContext:
          privileged: true
