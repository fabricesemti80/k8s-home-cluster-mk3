apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kubeview
  namespace: tools
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: kubeview
  interval: 5m
  chart:
    spec:
      chart: kubeview
      sourceRef:
        kind: HelmRepository
        name: kubeview
        namespace: flux-system
      version: 0.1.13
  values:
    replicaCount: 1

    image:
      repository: rebelinblue/kubeview
      tag: 0.1.14
      pullPolicy: Always

    nameOverride: kubeview

    ingress:
      enabled: false

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubeview
  namespace: tools
  annotations:
    kubernetes.io/ingress.class: traefik
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-forward-auth@kubernetescrd # needs oauth
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}" # needs external DNS #? https://github.com/kubernetes-sigs/external-dns/blob/master/docs/faq.md
    external-dns/is-public: "true"
spec:
  rules:
    - host: "kubeview.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: kubeview
                port:
                  number: 80
  tls:
    - hosts:
        - "kubeview.${SECRET_DOMAIN}"
      secretName: kubeview-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubeview-images
  namespace: tools
  annotations:
    kubernetes.io/ingress.class: traefik
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  rules:
    - host: "kubeview.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /img
            pathType: ImplementationSpecific
            backend:
              service:
                name: kubeview
                port:
                  number: 80
          - path: /css
            pathType: ImplementationSpecific
            backend:
              service:
                name: kubeview
                port:
                  number: 80
          - path: /js
            pathType: ImplementationSpecific
            backend:
              service:
                name: kubeview
                port:
                  number: 80
  tls:
    - hosts:
        - "kubeview.${SECRET_DOMAIN}"
      secretName: kubeview-tls
